#!/bin/bash

set -euo pipefail

function main {
  echo "NOTE: script uses cf cli. Ensure you are logged into right CPI system and ensure env-vars are set! "
  check_deps
  echo "Getting service info using cf service-key $service_instance $service_key ..."
  serviceInfo=$(cf service-key $service_instance $service_key | sed -e '1,2d') || die "Failed to perform cf service-key $service_instance $service_key"
  serviceHost=$(echo $serviceInfo | jq -r '.url')
  clientId=$(echo $serviceInfo | jq -r '.uaa.clientid')
  clientSecret=$(echo $serviceInfo | jq -r '.uaa.clientsecret')
  uaaUrl=$(echo $serviceInfo | jq -r '.uaa.url')
  auditLogHost=$(echo $serviceInfo | jq -r '.url')
  echo "Getting auth token from $uaaUrl/oauth/token?grant_type=client_credentials ..."
  jwtInfo=$(curl -f --user "$clientId:$clientSecret" "$uaaUrl/oauth/token?grant_type=client_credentials" || die "Failed to get auth token from $uaaUrl/oauth/token?grant_type=client_credentials")
  accessToken=$(echo $jwtInfo | jq -r '.access_token')
  auth="Authorization: Bearer $accessToken"
  curlCmd="curl -H '$auth' $auditLogHost/auditlog/v2/auditlogrecords"
  echo "Executing $curlCmd ..."
  curl -H "$auth" $auditLogHost/auditlog/v2/auditlogrecords | tee /tmp/auditlogs.json
}


function check_deps {
  deps=(cf curl jq)
  for dep in "${deps[@]}"; do
    installed "${dep}" || die "Missing '${dep}'"
  done
  echo "-check_deps OK."
}

function installed {
  cmd=$(command -v "${1}")

  [[ -n "${cmd}" ]] && [[ -f "${cmd}" ]]
  return ${?}
}


function die {
  >&2 echo "Fatal: ${@}"
  exit 1
}

main
